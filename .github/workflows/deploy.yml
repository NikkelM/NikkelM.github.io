name: Deploy to GitHub Pages

on:
  push:
    branches: main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  CheckVersion:
    runs-on: ubuntu-latest
    outputs:
      versionChanged: ${{ steps.check_version.outputs.changed }}
      newVersion: ${{ steps.check_version.outputs.version }}
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Check if version has been updated
        id: check_version
        uses: EndBug/version-check@v2
        with:
          diff-search: true

      - name: Log version change
        if: steps.check_version.outputs.changed == 'true'
        run: 'echo "Version change found in commit ${{ steps.check_version.outputs.commit }}! New version: ${{ steps.check_version.outputs.version }}"'

  CreateRelease:
    needs: CheckVersion
    if: needs.CheckVersion.outputs.versionChanged == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create Release notes
        run: |
          echo "## What's Changed

          " > CHANGELOG.md
          LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          git log --pretty=format:'* %s' $LAST_TAG..HEAD >> CHANGELOG.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.CheckVersion.outputs.newVersion }}
          name: v${{ needs.CheckVersion.outputs.newVersion }}
          files: JSON.to.Notion.zip
          body_path: CHANGELOG.md

  Build:
    needs: CheckVersion
    if: needs.CheckVersion.outputs.versionChanged == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Install, build, and upload site
        uses: withastro/action@v1

  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
